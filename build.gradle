plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'com.oroarmor.general-gradle-plugin' version '1.3.0'
	id 'com.oroarmor.minecraft-gradle-plugin' version '1.3.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
}

oroarmor {
	name = "Multi-Item-Lib"
	githubProjectName = "OroArmor/Multi-Item-Lib"
	description = "A placeholder mod for the Fabric-Api until better unhardcoding exists."
}

minecraftPublishing {
	gameVersions = ["1.19.4", "1.20", "1.20.1", "1.20.2", "1.20.3", "1.20.4"]
	modrinthId = "nMKRmM9Y"
	curseforgeId = "560669"
	loaders = ["Fabric", "Quilt"]
	modTask = remapJar
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	def targetVersion = 17
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	withSourcesJar()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	archiveClassifier = 'javadoc'
	from javadoc.destinationDir
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact javadocJar

			oroarmor.generateDefaultPom(it)

			archivesBaseName = project.archivesBaseName
		}
	}

	repositories {
		mavenLocal()
	}
}

import com.oroarmor.orogradleplugin.publish.PublishProjectToGithubTask
task github(type: PublishProjectToGithubTask) {
	assets.from(remapJar, sourcesJar, javadocJar)
}

import com.oroarmor.orogradleplugin.minecraft.*
task curseforge(type: CurseforgePublishTask)
task modrinth(type: ModrinthPublishTask)
